#!/bin/bash

# A script to setup TCP/UDP tunneling over SOCKS5 via badvpn-tun2sock
# https://github.com/ambrop72/badvpn/blob/master/tun2socks/badvpn-tun2socks.8

# Connect to the SSH server, passing -D localhost:8080 to the ssh
# command to enable dynamic forwarding. This will make ssh open a local
# SOCKS server which tun2socks could then forward the connection through.

# First create a TUN device:
#
# cat /etc/systemd/network/90-tun0.netdev
# [NetDev]
# Name=tun0
# Kind=tun
#
# [Tun]
# User=marcusmae
# Group=marcusmae
# 
# cat /etc/systemd/network/90-tun0.network
# [Match]
# Name=tun0
#
# [Address]
# Address=10.0.0.1/24

# Configure the IP of the new tun device:
ifconfig tun0 10.0.0.1 netmask 255.255.255.0

# tun2socks can forward UDP, however this requires a forwarder daemon, badvpn-udpgw to run
# on the remote SSH server:
# badvpn-udpgw --listen-addr 127.0.0.1:7300

# Now start the badvpn-tun2socks program:
# Note that the address 10.0.0.2 is not a typo. It specifies the IP address of the virtual
# router inside the TUN device, and must be different from the IP of the
# TUN interface itself (but in the same subnet).
badvpn-tun2socks --tundev tun0 --netif-ipaddr 10.0.0.2 --netif-netmask 255.255.255.0 --socks-server-addr 127.0.0.1:8080 --udpgw-remote-server-addr 127.0.0.1:7300 --loglevel 0

# All that remains is to route connections through the TUN device
# instead of the existing default gateway. This is done as follows:
route add default gw 10.0.0.2 metric 6

# Finally switch the nameserver in /etc/resolv.conf to a public one:
cat "nameserver 8.8.8.8" >/etc/resolv.conf

